{
    "receiver method declaration": {
        "prefix": ["re", "rm"],
        "body": "func (${1:receiver} ${2:type}) ${3:method}($4) $5 {\n\t$0\n}",
        "description": "Snippet for receiver method declaration"
    },
    "function declaration": {
        "prefix": "fu",
        "body": "func $1($2) $3 {\n\t$0\n}",
        "description": "Snippet for function declaration"
    },
    "main function": {
        "prefix": "main",
        "body": "func main() {\n\t$1\n}",
        "description": "Snippet for main function"
    },
    "if err != nil": {
        "prefix": "ie",
        "body": "if err != nil {\n\t${1:return ${2:nil, }${3:err}}\n}",
        "description": "Snippet for if err != nil"
    },

    "New Bubble Tea Program": {
        "prefix": "bubbletea",
        "body": [
            "package main",
            "",
            "import (",
            "\t\"fmt\"",
            "\t\"os\"",
            "",
            "\ttea \"github.com/charmbracelet/bubbletea\"",
            ")",
            "",
            "func main() {",
            "\terr := tea.NewProgram(initialModel(), tea.WithAltScreen()).Start()",
            "\tif err != nil {",
            "\t\tfmt.Fprintln(os.Stderr, err)",
            "\t\tos.Exit(1)",
            "\t}",
            "}",
            "",
            "func initialModel() model {",
            "\treturn model{}",
            "}",
            "",
            "type model struct{}",
            "",
            "func (m model) Init() tea.Cmd {",
            "\treturn nil",
            "}",
            "",
            "func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
            "\tswitch msg := msg.(type) {",
            "\tcase tea.KeyMsg:",
            "\t\tswitch msg.String() {",
            "\t\tcase \"ctrl+c\":",
            "\t\t\treturn m, tea.Quit",
            "\t\t}",
            "\t}",
            "\treturn m, nil",
            "}",
            "",
            "func (m model) View() string {",
            "\treturn \"Press Ctrl+C to exit\"",
            "}"
        ]
    }
}
